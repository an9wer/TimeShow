昨天在 github 主页推送上看到了一个关于 MuPDF 的项目，出于好奇，点进去了解了下，
发现其实是一个简单的脚本，实现的功能是每次使用 MuPDF 打开文件会定位到上次退出的
地方。我当时第一反应是 MuPDF 不就是那款 vi 操作的 PDF 阅读软件么？（后来发现是
我记错了，那个是 zathura）

于是去 MuPDF 官网了解了下，按照官网描述的
[[https://mupdf.com/docs/building.html|方法]]，将下载的最新源代码 build 了一遍
，之后用其打开了某个 PDF 文件。初看界面倒是挺简洁，其它没什么特别的。不过我还真
不知道怎么操作它，瞎按了个 F1，还真跳出来个帮助界面。简单地看了下，发现它所有的
操作命令加起来也不多，很容易就能掌握。但其实我最关心的是它能不能写注释，因为我
在看 PDF 文档的时候经常会写注释。仔细在文档中找了下，发现按 a 就能呼出
annotation 面板，不过也是相当简陋，乍看一脸茫然，多次尝试之后才发现这个
annotation 功能真是强大，包含了很多种类的标记方式：highlight, underscore,
square, strikeout 等等，且可选颜色也非常多。唯一不足是一旦标记多了之后找起来非
常麻烦（都密密麻麻挤在一块了）。

要知道我现在一直在用的是 FoxitReader，功能非常强大，不过对我来说好多都是不需要
的，最常用的注释功能我一般只用其中的两种标记（也不能换颜色）。所以 MuPDF 最吸引
我的地方其实就是它的注释功能。再一点就是 MuPDF 相对来说比较轻量，操作方式也比较
geek。当然，成为骆驼背上最后一根羽毛的是我发现之前用 FoxitReader 为 PDF 添加的
注释在 MuPDF 中同样能显示。这就促使我全面投向 MuPDF 的怀抱了。

今天一天使用下来，MuPDF 给我的感觉是简单实用，轻量，快。最后总结几个 MuPDF 不足
的地方：1. 不能用连续页查看 PDF，而是只能一页一页翻，2. 不能编辑书签，3. 之前提
到的标记多了找起来比较麻烦。Anyway, 想要变得 geek 有时候也是需要妥协一下的（但
是如果牛逼的话可以直接提交 patch）。

今天还了解了 Linux 下其他的 PDF 阅读器，这边也做个总结吧：

|                | Bookmark | Annotation                     |
| -------------- | -------- | ------------------------------ |
| FoxitReader    | yes      | yes                            |
| mupdf          | no       | yes                            |
| evince         | no       | yes                            |
| Okular         | no       | yes                            |
| zathura        | no       | no                             |
| llpp           | no       | kind of (shift + mouse right)  |

（注：这里的 Bookmark 表示是否可以修改 PDF 目录，Annotation 表示是否可以添加编
辑注释）

Thanks for reading :)


== Acknowledgements ==

-   [[https://en.wikipedia.org/wiki/List_of_PDF_software#Linux_and_Unix|List of PDF software in Linux]]
