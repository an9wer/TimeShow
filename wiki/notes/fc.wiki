= fc-cache =

{{{
    fc-cache [options] [dir...]
}}}

`fc-cache` scans the font directories on the system and builds font information
cache files for applications using fontconfig for their font handing.

== Options ==

`-f`: Force re-generation of apparently up-to-date cache files, overriding the
timestamp checking.

`-r`: Erase all existing cache files and rescan.

`-s`: Only scan system-wide directories, omitting the places located in the
user's home directory.

`-v`: Display status information while busy.

`dir`: Directory to scan for fonts.

= fc-list =

{{{
    fc-list [options] [pattern [element...]]
}}}

fc-list lists fonts and styles available on the system for applications using
fontconfig.

== Options ==

`-v`: Print verbose output of the whole font pattern for each match, or
elements if any is provided.

`-q`: Suppress all normal output. return 1 as the error code if no fonts
matched.

`-f --format format`: Format output according to the format specifier format.

`pattern`: If set, only fonts matching pattern are displayed.

`element`: If set, the element property is displayed for matching fonts

== Examples ==

Display all fonts:
{{{
    fc-list
}}}

or:
{{{
    fc-list :
}}}

Display fonts whose family is "Source Code Pro":
{{{
    fc-list ":family=Source Code Pro"
}}}

Display fonts whose family is "Source Code pro" and weight is 50:
{{{
    fc-list ":family=Source Code Pro:weight=50"
}}}

Display the lang of fonts whose family is "Source Code pro":
{{{
    fc-list ":family=Source Code Pro"  lang
}}}

Display fonts, whose family is "Source Code pro", by specific format:
{{{
    fc-list -f "%{file}: %{weight}\n" ":family=Source Code Pro"
}}}

= fc-match =

{{{
    fc-match [options] [pattern [element...] ]
}}}

`fc-match` matches pattern (empty pattern by default) using the normal
fontconfig matching rules to find the best font available. If `-s --sort` is
given, the sorted list of best matching fonts is displayed. The `-a --all`
option works like `--sort` except that no pruning is done on the list of fonts.

== Options ==

`-a`: Displays sorted list of best matching fonts, but do not do any pruning on
the list.

`-s`: Displays sorted list of the best matching fonts.

`-v`: Print verbose output of the whole font pattern for each match, or
elements if any is provided.

`-f --format fomrat`: Format output according to the format specifier format.

`pattern`: Display fonts matching pattern.

`element`: If set, the element property is displayed for matching fonts.

== Examples ==

Display fonts matched by family field:
{{{
    fc-match ":family=Source Code Pro"
}}}

Display sorted list of best matching fonts matched by family field:
{{{
    fc-match ":family=Source Code Pro" -a
}}}

Display sorted list of the best matching fonts matched by family field, but
pruning one the list:
{{{
    fc-match ":family=Source Code Pro" -s
}}}

= fc-query =

{{{
    fc-query [options] font-file...
}}}

`fc-query` queries font-file using the normal fontconfig rules and prints out
font pattern for each face found. If `-i -index` is given, only one face of
each file is querie, otherwise all faces are queried.

== Options ==

`-b`: Ignore blanks to compute languages

`-i --index index`: Only query face indexed index of each line

`-f --format format`: Format output according to the format specifier format
(same as fc-list).

`font-file`: Query font-file for font faces.

== Examples ==

Display information of font-file:
{{{
    fc-query /path/to/font.ttf
}}}

Display information of font-file by specific format.
{{{
    fc-query -f "%{style}" /path/to/font.ttf
}}}

= fc-scan =

{{{
    fc-scan [option] file...
}}}

`fc-scan` scans files recursively and prints out font pattern for each face
found.

== Options ==

`-b`: Ignore blanks to compute languages.

`-f --format format`: Format output according to the format.

`file`: Scan file recursively for font faces.

== Examples ==

Dispaly information of fonts scaned in some directory:
{{{
    fc-scan /path/to/font-dir
}}}

Dispaly information of fonts scaned in some directory by specific format:
{{{
    fc-scan -f "%{file} %{style}\n" /path/to/font-dir
}}}

= fc-validate =

{{{
    fc-validate [options] font-file...
}}}

`fc-validate` validates font-file if each fonts satisfies the language coverage
according to the orthography files in fontconfig. If `-i --index` is given,
only one face of each file is validated, otherwise all faces are validated.

== Options ==

`-i --index index`: Only query face indexed index of each file.

`-l --lang lang`: Set lang as a language instead of current locale.

`-v`: Show more detailed information.

`font-file`: Query font-file for font faces.

== Examples ==

Validate fonts whether satisfy the language set by locale:
{{{
    fc-validate /path/to/font.ttf
}}}

Validate fonts whether satisfy the language set by the option `-l`:
{{{
    fc-validate -l zh-cn /path/to/font.ttf
}}}

= TODO =

-   fc-cat

= References =

-   `man fc-cache`

-   `man fc-list`

-   `man fc-match`

-   `man fc-query`

-   `man fc-scan`

-   `man fc-validate`

-   `man FcPatternFormat` to see format used by `fc-list -f`

-   [[http://freedesktop.org/software/fontconfig/fontconfig-user.html|fontconfig-user]]

-   [[http://samwhelp.github.io/book-ubuntu-qna/read/howto/configure-font/fontconfig/util/fc-list|如何使用「fc-list」這個指令]]
