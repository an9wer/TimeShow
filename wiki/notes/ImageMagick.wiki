With ImageMagick version 6, the operators will always be applied in the command
line order as given by the user. For example:

-   Rotate two input image first, then append them together.
    {{{
        convert -size 40x20 xc:red  xc:blue -rotate 90 -append out.gif
    }}}

-   Append two input image first, then rotate them.
    {{{
        convert -size 40x20 xc:red  xc:blue -append -rotate 90 out.gif
    }}}

= convert =

== append ==

`-append`: Creates a single longer image, by joining all the current images in
sequence top-to-bottom. Use `+append` to stack images left-to-right. 

{{{
    convert -size 30x30 xc:red xc:blue -append append1.gif
}}}
{{../../html/statics/images/ImageMagick/append1.gif}}

{{{
    convert -size 30x30 xc:red xc:blue +append append2.gif
}}}
{{../../html/statics/images/ImageMagick/append2.gif}}

If they are not of the same width, narrower images are padded with the
current `-background` color setting, and their position relative to each
other can be controlled by the current `-gravity` setting.

{{{
    convert -background black -size 20x20 xc:red -size 30x30 xc:blue +append append3.gif
}}}
{{../../html/statics/images/ImageMagick/append3.gif}}

{{{
    convert -background black -gravity center -size 20x20 xc:red -size 30x30 xc:blue +append append4.gif
}}}
{{../../html/statics/images/ImageMagick/append4.gif}}

== resize ==

`-resize geometry`: Resize an image.

The size of original image is 100x50, as follows:

{{../../html/statics/images/ImageMagick/resize0.gif}}

-   Squash both the width and height to 50%. The final dimensions are 50x25:
    {{{
        convert -size 100x50 xc:red -resize '50%' resize1.gif
    }}}
    {{../../html/statics/images/ImageMagick/resize1.gif}}

-   Squash the height to 30, preserve the aspect ratio. The final dimensions
    are 60x30:
    {{{
        convert -size 100x50 xc:red -resize x30 resize2.gif
    }}}
    {{../../html/statics/images/ImageMagick/resize2.gif}}
    
-   Squash the minimum width to 60px and the height to 25px, preserve the
    aspect ratio. The final dimensions are 60x30:
    {{{
        convert -size 100x50 xc:red -resize '60^x25' resize3.gif
    }}}
    {{../../html/statics/images/ImageMagick/resize3.gif}}

-   Squash the width to 60px and the height to 25px, ignore the aspect ratio.
    The final dimensions are 60x25:
    {{{
        convert -size 100x50 xc:red -resize '60x25!' resize4.gif
    }}}
    {{../../html/statics/images/ImageMagick/resize4.gif}}

-   Squash the original image to 50x25 only if it is larger than that size. The
    final dimensions are 50x25:
    {{{
        convert -size 100x50 xc:red -resize '50x25>' resize5.gif
    }}}
    {{../../html/statics/images/ImageMagick/resize5.gif}}

-   Squash the original image to 50% only if it is smaller than that size. The
    final dimensions are 100x50 which is same as the original image:
    {{{
        convert -size 100x50 xc:red -resize '50%<' resize6.gif
    }}}
    {{../../html/statics/images/ImageMagick/resize6.gif}}

-   Squash the original image's widht to 50, and minimum height to 30 only if
    it is larger than that size, preserve the aspect ratio. The final
    dimensions are 60x30:
    {{{
        convert -size 100x50 xc:red -resize '50x30^>' resize7.gif
    }}}
    {{../../html/statics/images/ImageMagick/resize7.gif}}

-   Specify the maximum area in pixels of an image to 1250, preserve the aspect
    ratio. The final dimensions are 50x25:
    {{{
        convert -size 100x50 xc:red -resize '1250@' resize8.gif
    }}}
    {{../../html/statics/images/ImageMagick/resize8.gif}}


== crop ==

`-crop geometry{@}{!}`: Cut out one or more rectangular regions of the image.

The width and height of the geometry argument give the size of the image that
remains after cropping, and x and y in the offset (if present) gives the
location of the top left corner of the cropped image with respect to the
original image. To specify the amount to be removed, use `-shave` instead.

= Geometry =

Find more in
[[https://www.imagemagick.org/script/command-line-processing.php#geometry]].

| Size              | General description                                                                                 |
|-------------------|-----------------------------------------------------------------------------------------------------|
| scale%            | Height and width both scaled by specified percentage.                                               |
| scale-x%xscale-y% | Height and width individually scaled by specified percentages. (Only one % symbol needed.)          |
| width             | Width given, height automagically selected to preserve aspect ratio.                                |
| xheight           | Height given, width automagically selected to preserve aspect ratio.                                |
| widthxheight      | Maximum values of height and width given, aspect ratio preserved.                                   |
| widthxheight^     | Minimum values of width and height given, aspect ratio preserved.                                   |
| widthxheight!     | Width and height emphatically given, original aspect ratio ignored.                                 |
| widthxheight>     | Shrinks an image with dimension(s) larger than the corresponding width and/or height argument(s).   |
| widthxheight<     | Enlarges an image with dimension(s) smaller than the corresponding width and/or height argument(s). |
| area@             | Resize image to have specified area in pixels. Aspect ratio is preserved.                           |
| x:y               | Here x and y denotes an aspect ratio (e.g. 3:2 = 1.5).                                              |
| {size}{offset}    | Specifying the offset (default is +0+0). Below, {size} refers to any of the forms above.            |
| {size}{+-}x{+-}y  | Horizontal and vertical offsets x and y, specified in pixels. Signs are required for                |


= References =

-   
