#!/usr/bin/env bash

IN_DIR=$(realpath "$(dirname ${BASH_SOURCE[0]})")
OUT_DIR=$(realpath "$(dirname ${BASH_SOURCE[0]})/..")

usage() {
  cat <<EOF
build [<args>] [<adoc>...]

Arguments:
  -a, --all  Build all adoc files
EOF
}

build() {
  local adoc html category
  set -e
  for adoc in "$@"; do
    adoc=$(realpath "$adoc")
    if [[ ! -f $adoc ]]; then
      echo "Unexisted file '$adoc'."
      continue
    fi
    if [[ ! $adoc =~ \.adoc$ ]]; then
      echo "Unkonwn filetype '$1'."
      continue
    fi

    # Blog
    html=$(sed -nE 's@.*(20[0-9][0-9]/[01][0-9]/[0-3][0-9]_[^/]+\.adoc$)@\1@p' <(echo "$adoc"))
    category=blog

    # Notes
    if [[ -z $html ]]; then
      html=$(sed -nE 's@.*/(notes/.+\.adoc$)@\1@p' <(echo "$adoc"))
      category=notes
    fi

    # Index
    if [[ -z $html ]]; then
      html=$(sed -nE 's@.*/([^/]+\.adoc)@\1@p' <(echo "$adoc"))
      if [[ $html == blog.adoc ]]; then
        category=blog
      elif [[ $html == notes.adoc ]]; then
        category=notes
      elif [[ $html == tweet.adoc ]]; then
        category=tweet
      elif [[ $html == about.adoc ]]; then
        category=about
      else
        echo "Unknown file '$adoc'."
        continue
      fi
    fi

    # Error
    [[ -z $html ]] && { echo "Some error happened."; exit 1; }


    html=$OUT_DIR/${html%\.adoc}.html
    mkdir -p "$(dirname "$html")"
    #  Only build when html doesn't exist or mtime of adoc is updated.
    if [[ ! -f $html ]] ||
        ([[ -f $html ]] && (( $(stat -c "%Y" "$html") <= $(stat -c "%Y" "$adoc") ))); then
      asciidoc -b html5 -a "category=$category" -f "$IN_DIR/html5.conf" -o "$html" "$adoc"
      echo -e "'$adoc'\n->\t'$html'"
    fi
  done
  set +e
}

build_all() {
  local IFS=$'\n'
  build $(find "$IN_DIR" -type f -name "*.adoc")
}

# main
case $1 in
  -a|--all ) build_all ;;
  *.adoc   ) build "$@" ;;
  *        ) usage ;;
esac
